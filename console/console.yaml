openapi: 3.0.0
info:
  version: '1.0'
  title: Consoles
paths:
  /Consoles:
    get:
      summary: 'Returns a set of console configurations'
      operationId: listConsole
      tags:
        - console
      parameters:
        - name: locationId
          in: query
          description: LocationId to filter list of consoles
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 'Ok'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Console'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Save a console configuration
      operationId: saveConsoleConfiguration
      tags:
        - console
        - consoleConfiguration
      requestBody:
        description: The console configuration to be saved
        required: true
        content:
            application/json:
                schema:
                    $ref: '#/components/schemas/Console'
      responses:
        '200':
          description: 'Ok'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Console'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



  /Consoles/{consoleId}:
    get:
      summary: Returns a set of console configurations
      operationId: getConsoleById
      tags:
        - console
      parameters:
        - name: consoleId
          in: path
          description: ConsoleId of the console to fetch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 'Ok'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Console'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /WidgetConfiguration:
    post:
      summary: Rendered widget configuration from definition provided
      operationId: generateWidgetConfiguration
      tags:
        - widget
        - widget configuration
      parameters:
        - name: locationId
          in: query
          description: Location identifier for the location to which the widget configuration should be bound
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: The widget definition that should be used to generate the widget configuration
        required: true
        content:
            application/json:
                schema:
                    $ref: '#/components/schemas/WidgetDefinition'
      responses:
        '200':
          description: 'Ok'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WidgetConfiguration'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /WidgetTemplates:
    get:
      summary: Returns a collection of WidgetTemplates 
      operationId: listWidgetTemplates
      tags:
        - WidgetTemplate
#      parameters:
#        - name: consoleId
#          in: query
#          description: Console ID from whcih to select widget definitions
#          required: false
#          schema:
#            type: string
#            format: uuid

      responses:
        '200':
          description: Array of WidgetTemplate objects
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetDefinition'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    Console:
      type: object
      required:
        - consoleId
        - consoleName
        - consoleType
      properties:
        consoleId:
          type: string
          format: uuid
        # locationId - Tied to reference ID (Store or Owner)
        locationId:
          type: string
          format: uuid
        consoleName:
          type: string
        consoleType:
          type: string
        widgetDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/WidgetDefinition'

    WidgetDefinition:
      type: object
      required:
        - widgetTemplateId
        - widgetType
        - widgetName
        - DatasourceId
      properties:
        widgetTemplateId:
          type: integer
          format: int32
        widgetType:
          type: string
        widgetName:
          type: string
        moduleName:
          type: string

        datasource:
          type: object
          properties: 
            datasourceId:
              type: string
        state:
            type: object
            properties:
              renderState:
                type: string
              renderedAt:
                type: string
              renderLocationId:
                type: string
              renderLocationName:
                type: string
        elementBackground:
            type: object
            properties:
                backgroundColor:
                    type: string
        elementPrimaryDataValue:
            type: object
            properties:
                Text:
                  type: string
                TextColor:
                    type: string
                FontFamily:
                    type: string
                FontSize:
                    type: integer
                StringFormat:
                    type: string
                DataType:
                    type: string
                IsVisible:
                    type: boolean
        elementPrimaryDataLabel:
            type: object
            properties:
                Text:
                  type: string
                TextColor:
                    type: string
                FontFamily:
                    type: string
                FontSize:
                    type: integer
                StringFormat:
                    type: string
                DataType:
                    type: string
                IsVisible:
                    type: boolean
        elementSecondaryDataValue:
            type: object
            properties:
                Text:
                  type: string
                TextColor:
                    type: string
                FontFamily:
                    type: string
                FontSize:
                    type: integer
                StringFormat:
                    type: string
                DataType:
                    type: string
                IsVisible:
                    type: boolean
        elementSecondaryDataLabel:
            type: object
            properties:
                Text:
                  type: string
                TextColor:
                    type: string
                FontFamily:
                    type: string
                FontSize:
                    type: integer
                StringFormat:
                    type: string
                DataType:
                    type: string
                IsVisible:
                    type: boolean
        elementIcon:
            type: object
            properties:
                Text:
                    type: string
                TextColor:
                    type: string
                FontFamily:
                    type: string
                FontSize:
                    type: integer
                StringFormat:
                    type: string
                DataType:
                    type: string
                IsVisible:
                    type: boolean
        elementAction:
            type: object
            properties:
                haptic:
                    type: string
                status:
                    type: string
                Desciption:
                    type: string
                MainActionType:
                    type: string
                MainActionParameter:
                    type: string





